- [X] <assert.h>
- [X] <ctype.h>
- [X] <errno.h>
- [ ] <float.h>
- [X] <limits.h>
- [ ] <locale.h>
- [ ] <math.h>
- [ ] <setjmp.h>
- [ ] <signal.h>
- [ ] <stdarg.h>
- [X] <stddef.h>
- [ ] <stdio.h>
- [ ] <stdlib.h>
- [ ] <string.h>
- [ ] <time.h>
- [X] EDOM
- [X] ERANGE
- [X] errno
- [X] NULL
- [X] offsetof( type,  member-designator)
- [X] ptrdiff_t
- [X] size_t
- [X] wchar_t
- [ ] NDEBUG
- [ ] void assert(int expression);
- [ ] int isalnum(int c);
- [ ] int isalpha(int c);
- [ ] int iscntrl(int c);
- [ ] int isdigit(int c);
- [ ] int isgraph(int c);
- [ ] int islower(int c);
- [ ] int isprint(int c);
- [ ] int ispunct(int c);
- [ ] int isspace(int c);
- [ ] int isupper(int c);
- [ ] int isxdigit(int c);
- [ ] int tolower(int c);
- [ ] int toupper(int c);
- [ ] LC_ALL
- [ ] LC_COLLATE
- [ ] LC_CTYPE
- [ ] LC_MONETARY
- [ ] LC_NUMERIC
- [ ] LC_TIME
- [ ] NULL
- [ ] struct lconv
- [ ] char *setlocale(int category, const char *locale);
- [ ] struct lconv *localeconv(void);
- [ ] HUGE_VAL
- [ ] double acos(double x);
- [ ] double asin(double x);
- [ ] double atan(double x);
- [ ] double atan2(double y, double x);
- [ ] double cos(double x);
- [ ] double sin(double x);
- [ ] double tan(double x);
- [ ] double cosh(double x);
- [ ] double sinh(double x);
- [ ] double tanh(double x);
- [ ] double exp(double x);
- [ ] double frexp(double value, int *exp);
- [ ] double ldexp(double x, int exp);
- [ ] double log(double x);
- [ ] double log10(double x);
- [ ] double modf(double value, double *iptr);
- [ ] double pow(double x, double y);
- [ ] double sqrt(double x);
- [ ] double ceil(double x);
- [ ] double fabs(double x);
- [ ] double floor(double x);
- [ ] double fmod(double x, double y);
- [ ] jmp_buf
- [ ] int setjmp(jmp_buf env);
- [ ] void longjmp(jmp_buf env, int val);
- [ ] sig_atomic_t
- [ ] SIG_DFL
- [ ] SIG_ERR
- [ ] SIG_IGN
- [ ] SIGABRT
- [ ] SIGFPE
- [ ] SIGILL
- [ ] SIGINT
- [ ] SIGSEGV
- [ ] SIGTERM
- [ ] void (*signal(int sig, void (*func)(int)))(int);
- [ ] int raise(int sig);
- [ ] va_list
- [ ] void va_start(va_list ap,  parmN);
- [ ] type va_arg(va_list ap,  type);
- [ ] void va_end(va_list ap);

- [X] _IOFBF
- [X] _IOLBF
- [X] _IONBF
- [ ] BUFSIZ
- [X] EOF
- [ ] FILE
- [ ] FILENAME_MAX
- [ ] FOPEN_MAX
- [ ] fpos_t
- [ ] L_tmpnam
- [X] NULL
- [X] SEEK_CUR
- [X] SEEK_END
- [X] SEEK_SET
- [X] size_t
- [ ] stderr
- [ ] stdin
- [ ] stdout
- [ ] TMP_MAX
- [X] int remove(const char *filename);
- [ ] int rename(const char *old, const char *new);
- [ ] FILE *tmpfile(void);
- [ ] char *tmpnam(char *s);
- [ ] int fclose(FILE *stream);
- [ ] int fflush(FILE *stream);
- [ ] FILE *fopen(const char *filename, const char *mode);
- [ ] FILE *freopen(const char *filename, const char *mode, FILE *stream);
- [ ] void setbuf(FILE *stream, char *buf);
- [ ] int setvbuf(FILE *stream, char *buf, int mode, size_t size);
- [ ] int fprintf(FILE *stream, const char *format, ...);
- [ ] int fscanf(FILE *stream, const char *format, ...);
- [ ] int printf(const char *format, ...);
- [ ] int scanf(const char *format, ...);
- [ ] int sprintf(char *s, const char *format, ...);
- [ ] int sscanf(const char *s, const char *format, ...);
- [ ] int vfprintf(FILE *stream, const char *format, va_list arg);
- [ ] int vprintf(const char *format, va_list arg);
- [ ] int vsprintf(char *s, const char *format, va_list arg);
- [ ] int fgetc(FILE *stream);
- [ ] char *fgets(char *s, int n, FILE *stream);
- [ ] int fputc(int c, FILE *stream);
- [ ] int fputs(const char *s, FILE *stream);
- [ ] int getc(FILE *stream);
- [ ] int getchar(void);
- [ ] char *gets(char *s);
- [ ] int putc(int c, FILE *stream);
- [X] int putchar(int c);
- [X] int puts(const char *s);
- [ ] int ungetc(int c, FILE *stream);
- [ ] size_t fread(void *ptr, size_t size, size_t nmemb, FILE *stream);
- [ ] size_t fwrite(const void *ptr, size_t size, size_t nmemb, FILE *stream);
- [ ] int fgetpos(FILE *stream, fpos_t *pos);
- [ ] int fseek(FILE *stream, long int offset, int whence);
- [ ] int fsetpos(FILE *stream, const fpos_t *pos);
- [ ] long int ftell(FILE *stream);
- [ ] void rewind(FILE *stream);
- [ ] void clearerr(FILE *stream);
- [ ] int feof(FILE *stream);
- [ ] int ferror(FILE *stream);
- [ ] void perror(const char *s);

- [ ] EXIT_FAILURE
- [ ] EXIT_SUCCESS
- [ ] MB_CUR_MAX
- [ ] NULL
- [ ] RAND_MAX
- [ ] div_t
- [ ] ldiv_t
- [ ] size_t
- [ ] wchar_t
- [ ] double atof(const char *nptr);
- [ ] int atoi(const char *nptr);
- [ ] long int atol(const char *nptr);
- [ ] double strtod(const char *nptr, char **endptr);
- [ ] long int strtol(const char *nptr, char **endptr, int base);
- [ ] unsigned long int strtoul(const char *nptr, char **endptr, int base);
- [ ] int rand(void);
- [ ] void srand(unsigned int seed);
- [ ] void *calloc(size_t nmemb, size_t size);
- [ ] void free(void *ptr);
- [ ] void *malloc(size_t size);
- [ ] void *realloc(void *ptr, size_t size);
- [ ] void abort(void);
- [ ] int atexit(void (*func)(void));
- [ ] void exit(int status);
- [ ] char *getenv(const char *name);
- [ ] int system(const char *string);
- [ ] void *bsearch(const void *key, const void *base,
- [ ] size_t nmemb, size_t size,
- [ ] int (*compar)(const void *, const void *));
- [ ] void qsort(void *base, size_t nmemb, size_t size,
- [ ] int (*compar)(const void *, const void *));
- [ ] int abs(int j);
- [ ] div_t div(int numer, int denom);
- [ ] long int labs(long int j);
- [ ] ldiv_t ldiv(long int numer, long int denom);
- [ ] int mblen(const char *s, size_t n);
- [ ] int mbtowc(wchar_t *pwc, const char *s, size_t n);
- [ ] int wctomb(char *s, wchar_t wchar);
- [ ] size_t mbstowcs(wchar_t *pwcs, const char *s, size_t n);
- [ ] size_t wcstombs(char *s, const wchar_t *pwcs, size_t n);
- [ ] NULL
- [ ] size_t
- [ ] void *memcpy(void *s1, const void *s2, size_t n);
- [ ] void *memmove(void *s1, const void *s2, size_t n);
- [ ] char *strcpy(char *s1, const char *s2);
- [ ] char *strncpy(char *s1, const char *s2, size_t n);
- [ ] char *strcat(char *s1, const char *s2);
- [ ] char *strncat(char *s1, const char *s2, size_t n);
- [ ] int memcmp(const void *s1, const void *s2, size_t n);
- [ ] int strcmp(const char *s1, const char *s2);
- [ ] int strcoll(const char *s1, const char *s2);
- [ ] int strncmp(const char *s1, const char *s2, size_t n);
- [ ] size_t strxfrm(char *s1, const char *s2, size_t n);
- [ ] void *memchr(const void *s, int c, size_t n);
- [ ] char *strchr(const char *s, int c);
- [ ] size_t strcspn(const char *s1, const char *s2);
- [ ] char *strpbrk(const char *s1, const char *s2);
- [ ] char *strrchr(const char *s, int c);
- [ ] size_t strspn(const char *s1, const char *s2);
- [ ] char *strstr(const char *s1, const char *s2);
- [ ] char *strtok(char *s1, const char *s2);
- [ ] void *memset(void *s, int c, size_t n);
- [ ] char *strerror(int errnum);
- [ ] size_t strlen(const char *s);

- [ ] CLK_TCK
- [X] NULL
- [ ] clock_t
- [X] time_t
- [X] size_t
- [ ] struct tm
- [ ] clock_t clock(void);
- [ ] double difftime(time_t time1, time_t time0);
- [ ] time_t mktime(struct tm *timeptr);
- [X] time_t time(time_t *timer);
- [ ] char *asctime(const struct tm *timeptr);
- [ ] char *ctime(const time_t *timer);
- [ ] struct tm *gmtime(const time_t *timer);
- [ ] struct tm *localtime(const time_t *timer);
- [ ] size_t strftime(char *s, size_t maxsize, const char *format, const struct tm *timeptr);

- [X] #define CHAR_BIT                         8
- [X] #define CHAR_MAX    UCHAR_MAX  or SCHAR_MAX
- [X] #define CHAR_MIN            0  or SCHAR_MIN
- [X] #define MB_LEN_MAX                       1
- [X] #define INT_MAX                     +32767
- [X] #define INT_MIN                     -32767
- [X] #define LONG_MAX               +2147483647
- [X] #define LONG_MIN               -2147483647
- [X] #define SCHAR_MAX                     +127
- [X] #define SCHAR_MIN                     -127
- [X] #define SHRT_MAX                    +32767
- [X] #define SHRT_MIN                    -32767
- [X] #define UCHAR_MAX                      255
- [X] #define UINT_MAX                     65535
- [X] #define ULONG_MAX               4294967295
- [X] #define USHRT_MAX                    65535


- [ ] #define DBL_DIG                         10
- [ ] #define DBL_EPSILON                   1E-9
- [ ] #define DBL_MANT_DIG
- [ ] #define DBL_MAX                      1E+37
- [ ] #define DBL_MAX_10_EXP                 +37
- [ ] #define DBL_MAX_EXP
- [ ] #define DBL_MIN                      1E-37
- [ ] #define DBL_MIN_10_EXP                 -37
- [ ] #define DBL_MIN_EXP
- [ ] #define FLT_DIG                          6
- [ ] #define FLT_EPSILON                   1E-5
- [ ] #define FLT_MANT_DIG
- [ ] #define FLT_MAX                      1E+37
- [ ] #define FLT_MAX_10_EXP                 +37
- [ ] #define FLT_MAX_EXP
- [ ] #define FLT_MIN                      1E-37
- [ ] #define FLT_MIN_10_EXP                 -37
- [ ] #define FLT_MIN_EXP
- [ ] #define FLT_RADIX                        2
- [ ] #define FLT_ROUNDS
- [ ] #define LDBL_DIG                        10
- [ ] #define LDBL_EPSILON                  1E-9
- [ ] #define LDBL_MANT_DIG
- [ ] #define LDBL_MAX                     1E+37
- [ ] #define LDBL_MAX_10_EXP                +37
- [ ] #define LDBL_MAX_EXP
- [ ] #define LDBL_MIN                     1E-37
- [ ] #define LDBL_MIN_10_EXP                -37
- [ ] #define LDBL_MIN_EXP

